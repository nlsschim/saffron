name: CI

on:
    push:
        branches:
            - main

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    defaults:
     run:
       # Adding -l {0} helps ensure conda can be found properly in windows.
       shell: bash -l {0}


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version}}


    - name: Setup Miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        python-version: ${{ matrix.python-version }}
        environment-file: environment.yaml
        activate-environment: environment.yaml
        run-post: false

    - name: Conda Info
      run: |
        conda info -a
        conda list
        PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
        if [[ $PYVER != ${{ matrix.python-version }} ]]; then
          exit 1;
        fi



    - name: Install
      run: |
        pip install -e .

    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        conda install pytest pytest-cov
        pytest --cov=codebase --cov-report=xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: nlsschim/codebase
